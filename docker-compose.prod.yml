version: '3.8'

services:
  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: uav-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - uav-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: uav-backend-prod
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=false
      - CORS_ORIGINS=["http://localhost:8080", "https://yourdomain.com"]
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - vectorstore_data:/app/vectorstore
    networks:
      - uav-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: uav-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - uav-network

  # Vue.js Frontend (built for production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: uav-frontend-prod
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - uav-network

volumes:
  redis_data:
    driver: local
  vectorstore_data:
    driver: local

networks:
  uav-network:
    driver: bridge 