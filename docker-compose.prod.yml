version: '3.8'

services:
  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: uav-redis-prod
    ports:
      - "127.0.0.1:6379:6379"  # Only accessible from localhost
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-changeme}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - uav-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: uav-backend-prod
    ports:
      - "127.0.0.1:8000:8000"  # Only accessible from localhost
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
      - DEBUG=${DEBUG:-false}
      - CORS_ORIGINS=${CORS_ORIGINS:-["http://localhost:8080"]}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - vectorstore_data:/app/vectorstore
      - dataframes_data:/app/dataframes
    networks:
      - uav-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: uav-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - uav-network

  # Vue.js Frontend (Production Build)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: uav-frontend-prod
    environment:
      - VUE_APP_API_URL=${API_URL:-http://localhost:8000}
      - VUE_APP_CESIUM_TOKEN=${VUE_APP_CESIUM_TOKEN}
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - frontend_build:/usr/src/app/dist
    networks:
      - uav-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

volumes:
  redis_data:
    driver: local
  vectorstore_data:
    driver: local
  dataframes_data:
    driver: local
  frontend_build:
    driver: local

networks:
  uav-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 