version: '3.8'

services:
  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: uav-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: uav-backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=${DEBUG:-false}
      - CORS_ORIGINS=["http://localhost:8080", "http://frontend:8080"]
      - ANONYMIZED_TELEMETRY=false
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - vectorstore_data:/app/vectorstore
    networks:
      - uav-network

  # Vue.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uav-frontend
    ports:
      - "8080:8080"
    environment:
      - VUE_APP_API_URL=http://localhost:8000
      - VUE_APP_CESIUM_TOKEN=${VUE_APP_CESIUM_TOKEN}
      - NODE_ENV=development
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - uav-network

volumes:
  redis_data:
    driver: local
  vectorstore_data:
    driver: local

networks:
  uav-network:
    driver: bridge 